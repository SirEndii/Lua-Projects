---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by info.
--- DateTime: 02.05.2021 14:48
---

--- This script really needs some love - everything is quite primitive and not smart, there are also small bugs with the commands. Also some versioning would be neat

local githuburl = "https://raw.githubusercontent.com/SirEndii/Lua-Projects/refs/heads/master/src/Programs.txt"

programs = {}

local args = { ... }

function exit(message, isError)
    term.setTextColor(isError and colors.red or colors.yellow)
    print(message)
    term.setTextColor(colors.white)
    if isError then
        error()
    end
end

function loadSources()
    local dl, error = http.get(githuburl)
    if dl then
        text = dl.readAll()
        text:gsub("\n", "")
        text:gsub("\\", "")
        programs = textutils.unserialize(text)
    end
end

function install(program)
    if program == nil then
        exit("Please specify a program!", true)
    end

    if programs[program] == nil then
        exit("Program '" .. program .. "' does not exists!", true)
    end

    local startup = programs[program]["startup"]

    if fs.exists(program) then
        exit("Program is already installed. Either use the 'delete' or 'update' command", true)
    end

    if fs.exists("startup") then
        fs.delete("startup")
    end

    local sfile = fs.open("startup", "w")
    sfile.write(startup)
    sfile.close()
    
    libraries = {}
    
    programName = ""
    programPath = ""
    for k, v in ipairs(programs[program]["files"]) do
        if v.type == "program" then
           programPath = v.link 
           programName = v.name
        elseif v.type == "api" then
            table.insert(libraries, v)
        end
    end
    
    for k, v in ipairs(libraries) do
        term.setTextColor(colors.yellow)
        print("Downloading library ".. v.name .."...")
        shell.run("wget ".. v.link .." ".. program .."/api/".. v.name)
    end
    
    term.setTextColor(colors.yellow)
    print("Downloading program ".. program .."...")
    shell.run("wget ".. programPath .." ".. program .."/".. programName)
    term.setTextColor(colors.lime)
    print("Successfully installed ".. program)
end

function update(program)
    delete(program)

    print("Now installing the latest version from github...")
    install(program)
end

function delete(program)
    if program == nil then
        exit("Please specify a program!", true)
    end

    term.setTextColor(colors.yellow)
    print("WARNING: This option is quite primitive. It will uninstall all libraries used by this script even if they are used by others")

    print("Deleting program and libraries for '" .. program .. "'...")

    if programs[program] == nil then
        exit("Program '" .. program .. "' does not exists!", true)
    end

    if fs.exists("startup") then
        fs.delete("startup")
    end

    libraries = {}
    
    programName = ""
    programPath = ""
    for k, v in ipairs(programs[program]["files"]) do
        if v.type == "program" then
           programPath = v.link 
           programName = v.name
        elseif v.type == "api" then
            print(v)
            table.insert(libraries, v)
        end
    end

    for k, v in ipairs(libraries) do
        term.setTextColor(colors.yellow)
        print("Deleting library ".. v.name .."...")
        shell.run("rm ".. program .."/api/".. v.name)
        term.setTextColor(colors.lime)
        print("Deleted library ".. v.name)
    end

    term.setTextColor(colors.yellow)
    print("Deleting program ".. program .."...")
    shell.run("rm ".. program .."/".. programName)
    shell.run("rm ".. program .."/")
    term.setTextColor(colors.lime)
    print("Successfully uninstalled ".. program)
end

function showHelp()
    term.setTextColor(colors.lightGray)
    print("---- [Installer] ----")
    term.setTextColor(colors.white)
    print("installer help              - Shows this menu")
    print("installer list              - Lists all available programs")
    print("installer install <program> - Installs a program")
    print("installer update <program>  - Updates a program")
    print("installer delete <program>  - Deletes a program")
    print("installer config <program>  - Configures a program after it is installed")
    term.setTextColor(colors.lightGray)
    print("---- [=========] ----")
    term.setTextColor(colors.white)
end

function showList()
    for name, table in pairs(programs) do
        term.setTextColor(colors.green)
        write(name)
        term.setTextColor(colors.lightGray)
        write(" -- ")
        term.setTextColor(colors.cyan)
        write(table.desc .. "\n")
    end
end

function executeInput()
    if #args <= 0 then
        showHelp()
    end
    if #args >= 1 and args[1] == "help" then
        showHelp()
    elseif #args >= 1 and args[1] == "list" then
        showList()
    elseif #args >= 1 and args[1] == "install" then
        install(args[2])
    elseif #args >= 1 and args[1] == "update" then
        update(args[2])
    elseif #args >= 1 and args[1] == "delete" then
        delete(args[2])
    elseif #args >= 1 and args[1] == "config" then
        exit("Not implemented", false)
    elseif #args >= 1 then
        exit("Could not find command '" .. args[1] .. "' or you are missing arguments", false)
    end
end

loadSources()
executeInput()
